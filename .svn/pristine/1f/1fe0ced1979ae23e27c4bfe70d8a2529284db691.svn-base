/**
 * Project Name	: EasyChit
 * Class Name	: Categories
 * Date			: 02-06-2014, 10:24 AM
 * Developer	: Sanyasi Rao A
 * Company		: Sagarsoft India Ltd.
 * 
 * Description  :		
 * ------------------------------------------------------------------------------------------------------------------------------------------
 * This class shows up Categories screen to user.
 * It shows categories based on user role.
 * It shows 'Categories - Admin' screen to user having role Admin.
 * It shows 'Categories - User' screen to user having role Owner/User.
 * When user clicks on a category, it shows relevant screen to user.
 * ------------------------------------------------------------------------------------------------------------------------------------------
 */
package com.newchitfund.androidclient;

import java.util.HashMap;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Typeface;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Toast;

public class Categories extends Activity {
	
	private Button btnCreateChit;
	private Button btnViewChits;
	private Button btn_chitsHistory;
	private Button btnAddMember;
	private Button btnApproveDisapproveMember;
	private Button btnChangePaymentStatus;
	private Button btnSettings;
	private String memberRole;
	private Button btn_categoriesLabel;
	private Boolean checkNet = false;
	
	protected void onCreate(Bundle savedInstanceState) {
		
		// To show screen based on role of user
		HashMap<String, String> loggedInDetails = new HashMap<String, String>();
		SessionStorage sessionStorage = new SessionStorage(getApplicationContext());
		loggedInDetails = sessionStorage.getLoginDetails();
		memberRole = loggedInDetails.get("MEMBER_ROLE");
		
		if(memberRole.equalsIgnoreCase("ADMIN")) {
			// Check user role to show relevant screen to user based on role.
			
			// Show admin categories screen
			setContentView(R.layout.admin_categories);
			
			// Get objects from template
			btnCreateChit = (Button) findViewById(R.id.btn_createChit);
			btnViewChits = (Button) findViewById(R.id.btn_viewChits);
			btnAddMember = (Button) findViewById(R.id.btn_addMember);
			btnApproveDisapproveMember = (Button) findViewById(R.id.btn_approveDisapproveMember);
			btnChangePaymentStatus = (Button) findViewById(R.id.btn_changePaymentStatus);
			btn_categoriesLabel = (Button) findViewById(R.id.btn_categoriesLabel);
			btnSettings = (Button) findViewById(R.id.btn_settings);
			
			btn_categoriesLabel.setTypeface((Typeface.createFromAsset(getAssets(),"fonts/Roboto-Light.ttf")));
			
			/**
			 * This event triggers when user clicks on 'Create Chit' category. It shows relevant screen to user.
			 */
			btnCreateChit.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					
					// Navigate to 'Create New Chit' screen
					if(networkAvailable()) {
						Intent chitsCreation = new Intent(Categories.this, ChitsCreation.class);
						startActivity(chitsCreation);
						finish();
					}
				}
			});
			
			/**
			 * This event triggers when user clicks on 'View Chits' category. It shows relevant screen to user.
			 */
			btnViewChits.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {

					// Navigate to 'View Chits' screen
					if(networkAvailable()) {
						Intent viewChits = new Intent(Categories.this, ViewChits.class);
						startActivity(viewChits);
						finish();
					}
				}
			});
			
			/**
			 * This event triggers when user clicks on 'Add Member' category. It shows relevant screen to user.
			 */
			btnAddMember.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					
					// Navigate to 'Add Member' screen
					if(networkAvailable()) {
						Intent addMember = new Intent(Categories.this, AddMember.class);
						startActivity(addMember);
						finish();
					}
				}
			});
			
			/**
			 * This event triggers when user clicks on 'Approve/Disapprove Member' category. It shows relevant screen to user.
			 */
			btnApproveDisapproveMember.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					
					// Navigate to 'Approve/Disapprove Member' screen
					if(networkAvailable()) {
						Intent appMember = new Intent(Categories.this, UserApproveStatus.class);
						startActivity(appMember);
						finish();
					}
				}
			});
			
			/**
			 * This event triggers when user clicks on 'Change Payment Status' category. It shows relevant screen to user.
			 */
			btnChangePaymentStatus.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					
					// Navigate to 'Change Payment Status' screen
					if(networkAvailable()) {
						Intent paymentIntent = new Intent(Categories.this, ViewChits.class);
						paymentIntent.putExtra("FROMSCREEN", "payment");
						startActivity(paymentIntent);
						finish();
					}
				}
			});
			
			/**
			 * This event triggers when user clicks on 'Settings' category. It shows relevant screen to user.
			 */
			btnSettings.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					
					// Navigate to 'Settings' screen
					if(networkAvailable()) {
						Intent settings = new Intent(Categories.this, Settings.class);
						startActivity(settings);
						finish();
					}
				}
			});			
		}else if(memberRole.equalsIgnoreCase("USER") || memberRole.equalsIgnoreCase("OWNER")) {
			
			setContentView(R.layout.user_categories);
			
			// Get objects from template
			btnViewChits = (Button) findViewById(R.id.btn_viewChits);
			btn_chitsHistory = (Button) findViewById(R.id.btn_chitsHistory); 
			btnSettings = (Button) findViewById(R.id.btn_settings);
			
			/**
			 * This event triggers when user clicks on 'View Chits Created' category. It shows relevant screen to user.
			 */
			btnViewChits.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					
					// Navigate to 'View Chits Created' screen
					if(networkAvailable()) {
						Intent viewChits = new Intent(Categories.this, ViewChits.class);
						startActivity(viewChits);
						finish();
					}
				}
			});
			
			/**
			 * This event triggers when user clicks on 'Chits History' category. It shows relevant screen to user.
			 */
			btn_chitsHistory.setOnClickListener(new OnClickListener() {
			
				@Override
				public void onClick(View v) {
					
					// Navigate to 'Chits History' screen
					if(networkAvailable()) {
						Intent chitsHistory = new Intent(Categories.this, ChitsHistory.class);
						startActivity(chitsHistory);
						finish();
					}
				}
			});			

			/**
			 * This event triggers when user clicks on 'Settings' category. It shows relevant screen to user.
			 */
			btnSettings.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {

					// Navigate to 'Settings' screen
					if(networkAvailable()) {
						Intent settings = new Intent(Categories.this, Settings.class);
						startActivity(settings);
						finish();
					}
				}
			});			
		}
		
		super.onCreate(savedInstanceState);
		
	}
	
	private boolean networkAvailable() {
		checkNet = Utils.isInternetAvailable(Categories.this);
		if(checkNet){
			return true;
		}else{
			Toast.makeText(Categories.this, "Please check network connection", Toast.LENGTH_SHORT).show();
			return false;
		}
	}

}

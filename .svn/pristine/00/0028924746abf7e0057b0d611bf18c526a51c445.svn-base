package com.newchitfund.androidclient;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.newchitfund.androidclient.BiddingDetails.ApproveBid;
import com.newchitfund.androidclient.BiddingDetails.Bids_Adapter;
import com.newchitfund.androidclient.BiddingDetails.GetAllBids;
import com.newchitfund.androidclient.BiddingDetails.Bids_Adapter.BidHolder;
import com.newchitfund.businessobjects.Bids;
import com.newchitfund.businessobjects.Chit;
import com.newchitfund.businessobjects.MemberList;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

public class MembersList extends Activity{

	String chitID,chitBidDate;
	
	Chit chitDetails = new Chit();
	
	// To store userType,userID shraredPreferences
	String userName,userType,userID;
	
	private JSONObject jsonResponse;
	
	ListView memberListView;
	
	// Storing all chits details into chits_data array for later retrieval.
	ArrayList<MemberList> members_data = new ArrayList<MemberList>();
	
	JSONArray highestBidData;

	String inputBidDate,outputBidDate;
	
	RelativeLayout adminHighestBidLayout,userHighestBidLayout,userHighestBidLayout1; 
	TextView highestBidMemberName,highestBidAmount,highestBidDate;
	TextView MemberName,MemberName1,BidDate,BidAmount;
	
	ImageView doneButton,bidButton;
	CheckBox approveBidCheckBox;
	EditText newBidAmount;
	
	String bid_amount,user_id,bid_id;
	
	Long chitTotAmount,highBidAmount,enteredBidAmount;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.members_list);
		
		Bundle bundle = getIntent().getExtras();
		if(bundle!=null)
		{
			chitDetails = (Chit) bundle.getSerializable("chit");
		}
		
		chitID = chitDetails.get_chitID();
		chitTotAmount = Long.parseLong(chitDetails.get_chitAmount().toString());
		chitBidDate = chitDetails.get_bidDate();
		
		memberListView = (ListView)findViewById(R.id.lv_members_list);
		
		MemberName = (TextView)findViewById(R.id.tv_highest_bid_memberName);
		BidAmount = (TextView)findViewById(R.id.tv_highest_bidAmount);
		BidDate = (TextView)findViewById(R.id.tv_highest_bidDate);
		
		//Storing sharedPreferences values into userType,userID
		SharedPreferences sharedpreferences = getSharedPreferences(SessionStorage.ACCOUNT_PREFS_NAME, Context.MODE_PRIVATE);
		userType = sharedpreferences.getString("MEMBER_ROLE", null);
		userID = sharedpreferences.getString("MEMBER_ID", null);
		userName = sharedpreferences.getString("MEMBER_NAME", "");
		
		// userType = "USER";

		new GetAllMembers().execute();
	}
	
	public void closeList(View v){
		finish();
	}
	
	public void goBack(View v){
		finish();
	}
	
	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
		super.onBackPressed();
		finish();
	}
	
	/***************************************************************
	 * 
	 * Project Name : Chitfund
	 * Class Name   : GetAllChits
	 * DateTime     : 27-May-2014 05:00 PM 
	 * Developer    : Durga Prasad B
	 * Company      : Sagarsoft India Ltd.
	 * 
	 * Description  :
	 * ------------------------------------------------------------- 
	 * This class is used to get all chits from REST webservice by
	 * extending AsyncTask.
	 * 
	 * Depends upon user role service url will be changed and the
	 * list will fetch from webservice and display in listview. 
	 * -------------------------------------------------------------
	 * 
	 * *************************************************************/

	class GetAllMembers extends AsyncTask<Void, Void, String>
	{
		private String Error = null;
		ProgressDialog pd;
		String res;
		String sStatus=null, sMessage=null;

		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			pd = new ProgressDialog(MembersList.this);
			pd.setMessage("Loading members list, Please wait..");
			pd.show();
		}

		@Override
		protected String doInBackground(Void... params) {
			try {
				String url;
				
				String today = new SimpleDateFormat("dd/MM/yy").format(new Date());

				if(today.equals(chitBidDate))
					url= getResources().getString(R.string.URL)+"?call=getBidMemberList&chitID="+chitID;
				else
					url= getResources().getString(R.string.URL)+"?call=getBidMemberList&chitID="+chitID;

				HttpClient client = new DefaultHttpClient();
				HttpPost postAccept = new HttpPost(url);
				HttpResponse response = client.execute(postAccept);
				res = EntityUtils.toString(response.getEntity());
				//Log.v("Response", res.toString());

				jsonResponse = new JSONObject(res);

				sStatus = jsonResponse.getString("Status");
				sMessage = jsonResponse.getString("Message");

				if(sStatus.equalsIgnoreCase("Success")) {
					return "success";
				}

				if(!sMessage.equalsIgnoreCase("OK")) {
					return sMessage;
				}

			}catch (Exception e) {
				Error=e.getMessage();
			}
			return "Login Failed";
		}

		@Override
		protected void onPostExecute(String result) {

			if(pd.isShowing())
			{
				if(result.equalsIgnoreCase("success")) {
					
					String today = new SimpleDateFormat("dd/MM/yy").format(new Date());

					//Toast.makeText(getApplicationContext(), "TD: "+today+" BD:"+chitBidDate, Toast.LENGTH_LONG).show();
					
					SimpleDateFormat inputFormat = new SimpleDateFormat("d/M/yyyy");
					SimpleDateFormat outputFormat = new SimpleDateFormat("dd/MM/yy");

					try
					{
						members_data.clear();
						
						JSONArray jsonArray = jsonResponse.getJSONArray("Result");
						
						//Log.v("Result Set:", jsonArray.toString());

						for (int i = 0; i < jsonArray.length(); i++) {
							JSONObject resultObj = jsonArray.getJSONObject(i);
							MemberList member = new MemberList();

							member.set_memberID(resultObj.getString("memberID"));
							member.set_chitMemberID(resultObj.getString("chitMemberID"));
							member.set_memberName(resultObj.getString("name"));
							//member.set_bidDate(resultObj.getString("bidDate"));
							member.set_bidAmount(resultObj.getString("previousBidAmount"));
							member.set_isOwner(resultObj.getString("isOwner"));
							member.set_isWonBid(resultObj.getString("isWonBid"));
							
							inputBidDate= resultObj.getString("bidDate");
							outputBidDate = resultObj.getString("bidDate");

							try {
								Date date = inputFormat.parse(inputBidDate);
								outputBidDate = outputFormat.format(date);
							} catch (ParseException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}

							member.set_bidDate(outputBidDate);
							
							members_data.add(member);
						}
					}catch (Exception e) {
						// TODO: handle exception
					}

					Members_Adapter membersAdapter = new Members_Adapter(MembersList.this, R.layout.custom_member_list,
							members_data);
					memberListView.setAdapter(membersAdapter);
					membersAdapter.notifyDataSetChanged();

					pd.dismiss();
				}
				else if(result.equalsIgnoreCase("Login Failed")) {
					pd.dismiss();
					Toast.makeText(getApplicationContext(), result, Toast.LENGTH_LONG).show();				
				}
				else {
					pd.dismiss();
					Toast.makeText(getApplicationContext(), result, Toast.LENGTH_LONG).show();				
				}
			}

			super.onPostExecute(result);
		}
	}


	public class Members_Adapter extends ArrayAdapter<MemberList> {
		Activity activity;
		int layoutResourceId;
		MemberList member;
		ArrayList<MemberList> data = new ArrayList<MemberList>();

		public Members_Adapter(Activity act, int layoutResourceId,
				ArrayList<MemberList> data) {
			super(act, layoutResourceId, data);
			this.layoutResourceId = layoutResourceId;
			this.activity = act;
			this.data = data;
			//notifyDataSetChanged();
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View row = convertView;
			MemberHolder holder = null;

			if (row == null) {
				LayoutInflater inflater = LayoutInflater.from(activity);
				row = inflater.inflate(layoutResourceId, parent, false);

				holder = new MemberHolder();
				holder.holder_tv_memberName = (TextView) row.findViewById(R.id.tv_memberName);
				holder.holder_tv_bidAmount = (TextView) row.findViewById(R.id.tv_bidAmount);
				holder.holder_et_bidAmount = (EditText) row.findViewById(R.id.et_bidAmount);
				holder.holder_iv_editButton = (ImageView) row.findViewById(R.id.iv_editButton);
				holder.holder_iv_bidButton = (ImageView) row.findViewById(R.id.iv_bidButton);

				row.setTag(holder);
			} else {
				holder = (MemberHolder) row.getTag();
			}
			member = data.get(position);

			holder.holder_tv_memberName.setText(member.get_memberName());
			holder.holder_tv_bidAmount.setText(getResources().getString(R.string.Rupee)+" "+member.get_bidAmount());
			
			holder.holder_et_bidAmount.setVisibility(View.GONE);
			holder.holder_iv_editButton.setVisibility(View.GONE);
			holder.holder_iv_bidButton.setVisibility(View.GONE);

			return row;

		}

		class MemberHolder {
			TextView holder_tv_memberName;
			TextView holder_tv_bidAmount;
			EditText holder_et_bidAmount;
			ImageView holder_iv_editButton;
			ImageView holder_iv_bidButton;
		}

	}
	
	class ApproveBid extends AsyncTask<Void, Void, String>
	{
		private String Error = null;
		ProgressDialog pd;
		String res;
		String sStatus=null, sMessage=null;

		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			pd = new ProgressDialog(MembersList.this);
			pd.setMessage("Bid approving...");
			pd.show();
		}

		@Override
		protected String doInBackground(Void... params) {
			try {
				String url;

				url= getResources().getString(R.string.URL)+"?call=approveBid&bidID="+bid_id;

				HttpClient client = new DefaultHttpClient();
				HttpPost postAccept = new HttpPost(url);
				HttpResponse response = client.execute(postAccept);
				res = EntityUtils.toString(response.getEntity());
				//Log.v("Response", res.toString());

				jsonResponse = new JSONObject(res);

				sStatus = jsonResponse.getString("Status");
				sMessage = jsonResponse.getString("Message");

				if(sStatus.equalsIgnoreCase("Success")) {
					return "success";
				}

				if(!sMessage.equalsIgnoreCase("OK")) {
					return sMessage;
				}

			}catch (Exception e) {
				Error=e.getMessage();
			}
			return "Login Failed";
		}

		@Override
		protected void onPostExecute(String result) {

			if(pd.isShowing())
			{
				if(result.equalsIgnoreCase("success")) {

					//Toast.makeText(getApplicationContext(), "Welcome", Toast.LENGTH_LONG).show();
					
					Intent refreshIntent = new Intent(MembersList.this, MembersList.class);
					refreshIntent.putExtra("chit", chitDetails);
					startActivity(refreshIntent);
					finish();
					
					pd.dismiss();
				}
				else if(result.equalsIgnoreCase("Login Failed")) {
					pd.dismiss();
					//highestBidLayout.setVisibility(View.GONE);
					doneButton.setVisibility(View.GONE);
					Toast.makeText(getApplicationContext(), result, Toast.LENGTH_LONG).show();				
				}
				else {
					pd.dismiss();
					//highestBidLayout.setVisibility(View.GONE);
					doneButton.setVisibility(View.GONE);
					Toast.makeText(getApplicationContext(), result, Toast.LENGTH_LONG).show();				
				}
			}

			super.onPostExecute(result);
		}
	}
		
}
